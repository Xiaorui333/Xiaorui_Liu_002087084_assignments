/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.MessageHistory;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageHistoryRecord extends UpdatableRecordImpl<MessageHistoryRecord> implements Record4<Integer, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.message_history.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.message_history.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.message_history.role</code>.
     */
    public void setRole(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.message_history.role</code>.
     */
    public String getRole() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.message_history.content</code>.
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.message_history.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.message_history.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.message_history.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MessageHistory.MESSAGE_HISTORY.ID;
    }

    @Override
    public Field<String> field2() {
        return MessageHistory.MESSAGE_HISTORY.ROLE;
    }

    @Override
    public Field<String> field3() {
        return MessageHistory.MESSAGE_HISTORY.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return MessageHistory.MESSAGE_HISTORY.TIMESTAMP;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRole();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public LocalDateTime component4() {
        return getTimestamp();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRole();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public LocalDateTime value4() {
        return getTimestamp();
    }

    @Override
    public MessageHistoryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessageHistoryRecord value2(String value) {
        setRole(value);
        return this;
    }

    @Override
    public MessageHistoryRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessageHistoryRecord value4(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public MessageHistoryRecord values(Integer value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageHistoryRecord
     */
    public MessageHistoryRecord() {
        super(MessageHistory.MESSAGE_HISTORY);
    }

    /**
     * Create a detached, initialised MessageHistoryRecord
     */
    public MessageHistoryRecord(Integer id, String role, String content, LocalDateTime timestamp) {
        super(MessageHistory.MESSAGE_HISTORY);

        setId(id);
        setRole(role);
        setContent(content);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }
}
