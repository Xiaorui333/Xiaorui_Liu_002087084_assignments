/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.SearchResults;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SearchResultsRecord extends UpdatableRecordImpl<SearchResultsRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.search_results.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.search_results.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.search_results.topic</code>.
     */
    public void setTopic(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.search_results.topic</code>.
     */
    public String getTopic() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.search_results.result</code>.
     */
    public void setResult(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.search_results.result</code>.
     */
    public String getResult() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SearchResults.SEARCH_RESULTS.ID;
    }

    @Override
    public Field<String> field2() {
        return SearchResults.SEARCH_RESULTS.TOPIC;
    }

    @Override
    public Field<String> field3() {
        return SearchResults.SEARCH_RESULTS.RESULT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTopic();
    }

    @Override
    public String component3() {
        return getResult();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTopic();
    }

    @Override
    public String value3() {
        return getResult();
    }

    @Override
    public SearchResultsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SearchResultsRecord value2(String value) {
        setTopic(value);
        return this;
    }

    @Override
    public SearchResultsRecord value3(String value) {
        setResult(value);
        return this;
    }

    @Override
    public SearchResultsRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SearchResultsRecord
     */
    public SearchResultsRecord() {
        super(SearchResults.SEARCH_RESULTS);
    }

    /**
     * Create a detached, initialised SearchResultsRecord
     */
    public SearchResultsRecord(Integer id, String topic, String result) {
        super(SearchResults.SEARCH_RESULTS);

        setId(id);
        setTopic(topic);
        setResult(result);
    }
}
